// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  email    String   @unique
  age      Int
  username String   @unique
  password String
  weight   Float
  height   Float
  sex      Int
  days     Day[]
  recipes  Recipe[]
  calGoal  Int
  activity Float
  admin    Boolean  @default(false)
}

model Day {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  date     DateTime @default(now()) @unique
  foods    Food[]
  user     User     @relation(fields: [userId], references: [id])
  userId   String   @db.ObjectId
  calories Int
  weight   Float
}

model Recipe {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  foods       Food[]
  servings    Int
  allCalories Int
  user        User   @relation(fields: [userId], references: [id])
  userId      String @db.ObjectId
}

model Food {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  barcode  Int
  calories Int
  amount   Float
  recipe   Recipe? @relation(fields: [recipeId], references: [id])
  recipeId String? @db.ObjectId
  day      Day?    @relation(fields: [dayId], references: [id])
  dayId    String? @db.ObjectId
}

// TODO:REFACTOR WITH EMBEDDED
